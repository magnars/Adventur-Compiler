* Gjennomgang [8/8]
** DONE change_tracker.rb
** DONE changes_only_compiler.rb
** DONE enterpreter.rb
** DONE hashcode_keeper.rb
** DONE page.rb
** DONE room.rb
** DONE room_loader.rb
** DONE timed_jump_coordinator.rb
* Commands [29/30]
** DONE activate_saving.rb
** DONE add_deed.rb
** DONE add_flag.rb
** DONE add_kongerupi.rb
** DONE add_timejump.rb
** DONE assign_to_variable.rb
** DONE change_location.rb (removed)
** DONE count_visits.rb
** DONE end_paragraph.rb
** DONE end_subpage.rb
** DONE goto_room.rb
** DONE increase_bodycount.rb
** DONE plain_text.rb
** DONE register_delayed_call.rb
** DONE reinstate_alternatives.rb
** DONE remove_alternatives.rb
** DONE remove_flag.rb
** DONE run_saved_command.rb
** DONE summarize_deeds.rb
** DONE unfinished_story.rb
** DONE unreachable
** DONE save_command.rb
** DONE procedure_call.rb
** DONE comments
** DONE conditional_goto.rb
** DONE alternatives_from_other.rb
** DONE alternatives.rb
** DONE conditional_command.rb
** DONE command_bundle.rb -> if_statement.rb
** TODO sentence_with_variable.rb
* Commands som gjemmer seg [5/5]
** DONE Enterpreter.initialize_hashcode_keeper
   Denne har meninger om saved_command_regexp og deed_regexp. Scanner alle
   filene for disse.
** DONE timed_jump_coordinator lager old-code
** DONE timed_jump_coordinator scanner etter delayed calls med regexp
** DONE timed_jump_coordinator finner room_references med regexp
** DONE timed_jump_coordinator finner romreferanser i alternativer selv
* Conditionals [4/4]
** DONE Port fra intelliadv
** DONE visit count
   def test_should_jump_on_visit_count
     room = ['[X]3', '623'].extend(Room)
     room.number = 453
     command = setup_jump_mocks room
     assert_equal(expected_code_for_jump_on_visit_count, command.code)
   end

   def expected_code_for_jump_on_visit_count
     [
       'if ($this->con($this->receiver->get_detail("\$_VISITS_TO_453") == 3)) {',
       '  $this->receiver->room_number_changed(623);',
       '  $this->execute_room_623();',
       '  return;',
       '}'
     ]
   end

   ----

    elsif line[0..2] == "[X]"
      command = GotoRoom.parse?("@#{room.next}", room, enterpreter)
      ConditionalCommand.new Conditional.parse("$_VISITS_TO_#{room.number} == #{line[3..-1]}"), command

   ----

   def test_should_parse_visit_count_conditional
     room = ["[X!]3", "command"].extend(Room)
     room.number = 5244
     (enterpreter = mock('enterpreter')).stubs(:current_command).returns(PlainText.new("command"))
     conditional = ConditionalCommand.parse?(room.current, room, enterpreter)
     assert_equal(expected_code_for_visit_count, conditional.code)
   end

  def expected_code_for_visit_count
    ['if ($this->con($this->receiver->get_detail("\$_VISITS_TO_5244") == 3)) {',
     '  $this->receiver->write("command");',
     '}']
  end

** DONE Conditional.parse i conditional_goto + both_conditions
** DONE CondTree.parse av $VALUE == 12
* Ekstra problemer [1/4]
** TODO Hashcoding av Saved Commands vil bli helt feil.
   Løsningen er å manuelt endre oppslagene i hashcodefile
** TODO :tidshopp +1 går til en kommando ->add_timejump(); ... trenger params
** DONE den gamle løsningen har significant whitespace.
   Det funker dårlig med emacs, og det er ørlitt tullete med { blocks }
   - må gjøre noe med plain-tekstene som starter med " *", " #" o.l.

** TODO <pre> er ødelagt pga fjerning av whitespace foran --> bytt ut med bilder?
